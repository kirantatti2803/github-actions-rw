name: Build

on:
    workflow_call:
        inputs:
          app:
            type: choice
            description:  "Select the Application"
            options:
              - React-JS
              - Python
              - Java-Maven
            default: React-JS
            required: true

jobs:
    build:
        runs-on: ubuntu-latest
        env:
          APP_A_PATH: "./react-app"
          APP_B_PATH: "./pypython"
          APP_C_PATH: "./java-maven"

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
  
            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                node-version: '20.x'
              if: ${{ inputs.app == 'React-JS' }}

            - name: Setup Python environment
              uses: actions/setup-python@v3
              with:
                python-version: '3.10'
              if: ${{ inputs.app == 'Python' }}

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                java-version: '17'
                distribution: 'temurin'
                cache: maven
              if: ${{ inputs.app == 'Java-Maven' }}

            - name: Installing Dependencies for ${{ inputs.app }}
              run: |
                echo " Installing Dependencies for ${{ inputs.app }}"
                if [[ "${{ inputs.app }}" == "React-JS" ]]; then
                 echo "Installing Dependencies for  App React-JS"
                 export APP_PATH=${{ env.APP_A_PATH }}
                 cd ./react-app
                 npm ci
                elif [[ "${{ inputs.app }}" == "Python" ]]; then
                 echo "Installing Dependencies for  App Python"
                 export APP_PATH=${{ env.APP_B_PATH }}
                 python -m pip install --upgrade pip
                 pip install flake8 pytest
                 if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                elif [[ "${{ inputs.app }}" == "Java-Maven" ]]; then
                 echo "Install and Build for Java Meven for App Java-Maven"
                 export APP_PATH=${{ env.APP_C_PATH }}
                 cd ./java-maven
                 mvn -B package --file pom.xml
                fi
            - name: Test ${{ inputs.app }}
              run: |
                echo " Test ${{ inputs.app }}"
                if [[ "${{ inputs.app }}" == "React-JS" ]]; then
                 echo "Test App React-JS"
                 cd ./react-app
                 npm test
                elif [[ "${{ inputs.app }}" == "Python" ]]; then
                 echo "Test App Pythons"
                 pwd
                 cd ./pyproject/src
                 pwd
                 python -m pytest addition.py
                 echo "Testing competed"
                elif [[ "${{ inputs.app }}" == "Java-Maven" ]]; then
                 pwd
                 echo "Testing completed"
                fi
            - name: Lint for ${{ inputs.app }}
              run: |
                echo "Linting ${{ inputs.app }}"
                if [[ "${{ inputs.app }}" == "React-JS" ]]; then
                 echo "Lint App A"
                 cd ./react-app
                 npm run lint
                elif [[ "${{ inputs.app }}" == "Python" ]]; then
                 echo "Lint App Python"
                 # stop the build if there are Python syntax errors or undefined names
                 flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                 # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                 flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
                elif [[ "${{ inputs.app }}" == "Java-Maven" ]]; then
                 pwd
                 echo "Lint App Java-Maven"
                 echo "Lining for Java Meven completed"
                fi             